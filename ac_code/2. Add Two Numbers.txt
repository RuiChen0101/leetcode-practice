/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* result = new ListNode();
        ListNode* current = result;
        int carryOut = 0;
        while(true){
            current->val = l1->val + l2->val + carryOut;
            carryOut = current->val / 10;
            current->val = current->val % 10;
            l1 = l1->next;
            l2 = l2->next;
            if(l1 == nullptr || l2 == nullptr) break;
            current->next = new ListNode();
            current = current->next;
        }
        while(l1 != nullptr){
            current->next = new ListNode();
            current = current->next;
            current->val = l1->val + carryOut;
            carryOut = current->val / 10;
            current->val = current->val % 10;
            l1 = l1->next;
        }
        while(l2 != nullptr){
            current->next = new ListNode();
            current = current->next;
            current->val = l2->val + carryOut;
            carryOut = current->val / 10;
            current->val = current->val % 10;
            l2 = l2->next;
        }
        if(carryOut != 0){
            current->next = new ListNode();
            current = current->next;
            current->val = 1;
        }
        return result;
    }
};