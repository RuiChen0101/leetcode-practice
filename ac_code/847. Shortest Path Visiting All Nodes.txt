// ref:
// https://www.tutorialspoint.com/shortest-path-visiting-all-nodes-in-cplusplus
class Solution {
public:
    int shortestPathLength(vector<vector<int>>& graph) {
        queue<vector<int>> q;
        int n = graph.size();
        int allVisited = (1 << n) - 1;
        map<int, set<int>> visited;
        for (int i = 0; i < n; i++) {
            q.push({1 << i, i});
        }
        if (n == 1) return 0;
        for (int l = 1; !q.empty(); l++) {
            int size = q.size();
            while (size--) {
                vector<int> current = q.front();
                q.pop();
                for (int i = 0; i < graph[current[1]].size(); i++) {
                    int d = graph[current[1]][i];
                    int newVisited = (current[0] | (1 << d));
                    if (newVisited == allVisited) return l;
                    if (visited[d].count(newVisited)) continue;
                    visited[d].insert(newVisited);
                    q.push({newVisited, d});
                }
            }
        }
        return -1;
    }
};