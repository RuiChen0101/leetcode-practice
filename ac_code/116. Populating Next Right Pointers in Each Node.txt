/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
        if (root == NULL) return NULL;
        vector<Node*> v = {root};
        while (v.size() != 0) {
            for (int i = 0; i < v.size() - 1; i++) {
                v[i]->next = v[i + 1];
            }
            vector<Node*> newV;
            for (Node* n : v) {
                if (n->left == NULL) break;
                newV.push_back(n->left);
                newV.push_back(n->right);
            }
            v = newV;
        }
        return root;
    }
};